// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id               String         @id @default(uuid())
  name             String?
  email            String?
  phone_number     String?
  country_code     String?
  institution_type String?
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  address          user_address[]
  isActive         Boolean        @default(true)
  isDeleted        Boolean        @default(false)
}

model auth_otp {
  id           String   @id @default(uuid())
  otp          String
  user_id      String?
  phone_number String?
  country_code String?
  email        String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model auth {
  id            String          @id @default(uuid())
  phone_number  String?
  country_code  String?
  email         String?
  isActive      Boolean         @default(true)
  isDeleted     Boolean         @default(false)
  type          AccountType     @default(CUSTOMER)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  login_history login_history[]

  @@index([country_code, phone_number])
  @@index([email])
}

model login_history {
  id         String   @id @default(uuid())
  isActive   Boolean  @default(true)
  auth_user  auth?    @relation(fields: [user_id], references: [id])
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model user_address {
  id           String   @id @default(uuid())
  house_no     String?
  street       String?
  address_line String?
  pincode      String
  city         String
  state        String
  user         user?    @relation(fields: [user_id], references: [id])
  user_id      String
  is_default   Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

enum AccountType {
  ADMIN
  CUSTOMER
}
